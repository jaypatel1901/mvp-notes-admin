{"version":3,"sources":["./src/app/auth/forget-password/forget-password.component.html","./src/app/auth/login/login.component.html","./src/app/auth/reset-password/reset-password.component.html","./src/app/auth/auth-routing.module.ts","./src/app/auth/auth.component.ts","./src/app/auth/auth.module.ts","./src/app/auth/forget-password/forget-password.component.css","./src/app/auth/forget-password/forget-password.component.ts","./src/app/auth/login/login.component.css","./src/app/auth/login/login.component.ts","./src/app/auth/reset-password/reset-password.component.css","./src/app/auth/reset-password/reset-password.component.ts"],"names":[],"mappings":"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","file":"auth-auth-module.js","sourcesContent":["export default \"<p>forget-password works!</p>\\n\";","export default \"\\n<div class=\\\"row\\\">\\n    <div class=\\\"bg-auth-group col-lg-4 col-md-12 \\\">\\n         <img src=\\\"./../../../assets/images/logo.png\\\" class=\\\"logo_header\\\"/>\\n         <p class=\\\"para_bg_login\\\">\\n            Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book.\\n         </p>\\n    </div>\\n\\n    <div class=\\\"col-lg-8 col-md-12\\\" style=\\\"margin-top: 8%;\\\">\\n\\n        <div class=\\\"login_auth_box w-50 m-auto \\\">\\n            <h2 class=\\\"ProductSansBold login_heading text-center\\\">Welcome back to Corell Notes Administrator Panel</h2>\\n           \\n          <div class=\\\"social_login_box\\\">\\n            \\n              <!-- <a href=\\\"#\\\" class=\\\"social_anchor_login\\\">\\n                  <img src=\\\"assets/images/google.svg\\\" class=\\\"google_icon\\\"/>\\n                Continue with Google\\n              </a>\\n              <a href=\\\"#\\\" class=\\\"social_anchor_login bg-blue\\\">\\n                <img src=\\\"assets/images/facebook.svg\\\" class=\\\"google_icon\\\"/>\\n                Continue with Facebook\\n              </a> -->\\n\\n              <div class=\\\"email_sign-new my-4\\\">\\n                  <p>Please enter your email address and password to login</p>\\n              </div>\\n          </div>\\n          \\n\\n          <form class=\\\"form_login\\\" [formGroup]=\\\"loginForm\\\" (ngSubmit)=\\\"onSubmit()\\\">\\n              <div class=\\\"form-group\\\">\\n                  <input type=\\\"email\\\" class=\\\"form_login_n\\\"  placeholder=\\\"Email\\\" formControlName=\\\"email\\\"  required [ngClass]=\\\"{ 'has-error': submitted && formControls.email.errors }\\\" />\\n                  <div class=\\\"alert- mt-2\\\" *ngIf=\\\" submitted && formControls.email.errors || loginForm.controls['email'].dirty || loginForm.controls['email'].touched\\\">\\n                    <ng-container *ngIf=\\\"loginForm.controls['email'].hasError('required')\\\">\\n                      <span class=\\\"redColor\\\">Email is required</span>\\n                    </ng-container>\\n                    <ng-container *ngIf=\\\"loginForm.controls['email'].hasError('pattern');\\\">\\n                      <span class=\\\"redColor\\\">Please enter valid email</span>\\n                    </ng-container>\\n                  </div>\\n             \\n                </div>\\n\\n              <div class=\\\"form-group\\\">\\n                <input type=\\\"password\\\" class=\\\"form_login_n\\\" placeholder=\\\"Password\\\" formControlName=\\\"password\\\" [ngClass]=\\\"{ 'has-error': submitted && formControls.password.errors }\\\" />\\n                <div  class=\\\"alert- mt-2\\\" *ngIf=\\\" submitted && formControls.email.errors ||loginForm.controls['password'].invalid && (loginForm.controls['password'].dirty || loginForm.controls['password'].touched)\\\">\\n                  <ng-container *ngIf=\\\"loginForm.controls['password'].hasError('required');\\\">\\n                    <span class=\\\"redColor\\\">Password is required</span>\\n                  </ng-container>\\n                  <ng-container *ngIf=\\\"loginForm.controls['password'].hasError('pattern');\\\">\\n                    <span class=\\\"redColor\\\">Please enter valid password</span>\\n                  </ng-container>                 \\n                </div>\\n              </div>\\n            <div class=\\\"form-group\\\">\\n                <div class=\\\"form-check\\\">\\n                  <input class=\\\"form-check-input\\\" type=\\\"checkbox\\\" id=\\\"gridCheck\\\" >\\n                  <label class=\\\"form-check-label form_rember\\\" for=\\\"gridCheck\\\">\\n                    Remember this device\\n                  </label>\\n                </div>\\n                <p class=\\\"para_forgot\\\">\\n                    <a href=\\\"forget_password.html\\\" >\\n                        Forgot your password?\\n                    </a></p>\\n            </div>\\n\\n            <div class=\\\"form-group\\\">\\n               <input type=\\\"submit\\\" value=\\\"Sign in\\\" class=\\\"form_submit\\\"/>\\n            </div>\\n          </form>\\n        \\n        </div>\\n         \\n        <footer class=\\\"footer_class\\\">\\n            <div class=\\\"row\\\">\\n                <div class=\\\"col-lg-8 order-mobile-tab-1\\\">\\n                   <ul class=\\\"footer_unders\\\">\\n                       <li><a>@2020</a></li>\\n                       <li><a>Terms of use</a></li>\\n                       <li><a>Privacy policy</a></li>\\n                       <li><a>Trust & Safety</a></li>\\n                   </ul>\\n                </div>\\n                \\n            </div>\\n        </footer>\\n    </div>\\n</div>\";","export default \"<p>reset-password works!</p>\\n\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { AuthComponent } from './auth.component';\nimport { LoginComponent } from './login/login.component';\nimport { ForgetPasswordComponent } from './forget-password/forget-password.component';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: AuthComponent,\n    children: [\n      {\n        path: 'login',\n        component: LoginComponent,\n      },\n      {\n        path: 'forget',\n        component: ForgetPasswordComponent,\n      },\n      {\n        path:'',\n        redirectTo: 'login',\n        pathMatch: 'full',\n      },\n    ],\n  },\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class AuthRoutingModule { }\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-user',\n  template: `\n  <router-outlet></router-outlet>\n  `,\n  styles: [\n  ]\n})\nexport class AuthComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { CommonModule } from '@angular/common';\nimport { AuthRoutingModule } from './auth-routing.module';\nimport { AuthComponent } from './auth.component';\nimport { LoginComponent } from './login/login.component';\nimport { ForgetPasswordComponent } from './forget-password/forget-password.component';\nimport { ResetPasswordComponent } from './reset-password/reset-password.component';\n\n\n@NgModule({\n  declarations: [\n    AuthComponent,\n    LoginComponent,\n    ForgetPasswordComponent,\n    ResetPasswordComponent,\n    \n  ],\n  imports: [\n    CommonModule,\n    FormsModule,\n    ReactiveFormsModule,\n    AuthRoutingModule\n  ]\n})\nexport class AuthModule { }\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2F1dGgvZm9yZ2V0LXBhc3N3b3JkL2ZvcmdldC1wYXNzd29yZC5jb21wb25lbnQuY3NzIn0= */\";","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-forget-password',\n  templateUrl: './forget-password.component.html',\n  styleUrls: ['./forget-password.component.css']\n})\nexport class ForgetPasswordComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","export default \".bg-auth-group\\n{\\n    background-image: url('Login.png');\\n    height: 100vh;\\n    background-size: cover;\\n\\n}\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvYXV0aC9sb2dpbi9sb2dpbi5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBOztJQUVJLGtDQUEwRDtJQUMxRCxhQUFhO0lBQ2Isc0JBQXNCOztBQUUxQiIsImZpbGUiOiJzcmMvYXBwL2F1dGgvbG9naW4vbG9naW4uY29tcG9uZW50LmNzcyIsInNvdXJjZXNDb250ZW50IjpbIi5iZy1hdXRoLWdyb3VwXG57XG4gICAgYmFja2dyb3VuZC1pbWFnZTogdXJsKCcuLi8uLi8uLi9hc3NldHMvaW1hZ2VzL0xvZ2luLnBuZycpIDtcbiAgICBoZWlnaHQ6IDEwMHZoO1xuICAgIGJhY2tncm91bmQtc2l6ZTogY292ZXI7XG5cbn1cbiJdfQ== */\";","import { Component, OnInit } from '@angular/core';\nimport { FormGroup, FormControl, FormBuilder, Validators } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { CommonService } from '../../core/services/common.service';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent implements OnInit {\n  submitted: boolean = false;\n  loginForm: FormGroup;\n  passwordType: any = false;\n  error: any;\n  user: any;\n  constructor(private commonService: CommonService, private _router: Router, private formBuilder: FormBuilder) { }\n\n  ngOnInit(): void {\n    this.loginForm = this.formBuilder.group({\n      email: ['', [\n        Validators.required,\n        Validators.email,\n        Validators.pattern(\"^[a-z0-9._%+-]+@[a-z0-9.-]+\\.[a-z]{2,4}$\")\n\n      ]\n      ],\n      password: ['',\n        [\n          Validators.required,\n          Validators.pattern(/^\\S*$/)\n        ]\n      ],\n    });\n  }\n  get formControls() { return this.loginForm.controls; }\n\n  onSubmit() {\n    this.submitted = true;\n    if (this.loginForm.invalid) {\n      return;\n    }\n    let body = {\n      email: this.loginForm.value.email,\n      password: this.loginForm.value.password,\n    }\n    this.commonService.post('adminLogin', body).subscribe((data: any) => {\n      console.log(\"data\", data)\n      if (data.status == 200) {\n\n\n        let token = data.token;\n        localStorage.setItem('firstName', data.data.firstName);\n        localStorage.setItem('lastName', data.data.lastName);\n\n\n        localStorage.setItem('token', token);\n        this._router.navigate([\"dashboard\"]);\n      } else {\n        this.error = data.message\n        alert(this.error)\n      }\n\n    },\n      (error) => {\n        // this.error=error.error.error;\n        // this.error='Invalid email or password';\n        // this.spinner.hide();\n        // this.toastr.warning('something went wrong', 'error');\n\n      })\n  }\n\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2F1dGgvcmVzZXQtcGFzc3dvcmQvcmVzZXQtcGFzc3dvcmQuY29tcG9uZW50LmNzcyJ9 */\";","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-reset-password',\n  templateUrl: './reset-password.component.html',\n  styleUrls: ['./reset-password.component.css']\n})\nexport class ResetPasswordComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n"],"sourceRoot":"webpack:///"}